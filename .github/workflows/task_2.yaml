name: "Terraform CI/CD"

on:
  push:
    branches:
      - task_2
      - main
  pull_request:
    branches:
      - main

env:
  TF_ROOT: tasks/task_2
  AWS_REGION: eu-central-1
  TF_VERSION: "1.6.0"

jobs:
  lint:
    name: Lint Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}# Specify your Terraform version

      - name: Terraform fmt check
        working-directory: ${{ env.TF_ROOT }}
        run: terraform fmt -check

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create public key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PUBLIC_KEY }}" > ~/.ssh/id_ed25519.pub

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    # if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create public key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.AWS_SSH_PUBLIC_KEY }}" > ~/.ssh/id_ed25519.pub

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{ env.TF_ROOT }}
        run: terraform apply -auto-approve

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: apply
    # if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create public key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.AWS_SSH_PUBLIC_KEY }}" > ~/.ssh/id_ed25519.pub

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: terraform init

      - name: Terraform Destroy
        working-directory: ${{ env.TF_ROOT }}
        run: terraform destroy -auto-approve
